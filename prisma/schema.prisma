generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
}

enum Role {
  admin
  driver
  passenger
}

enum CarType {
  Damas
  Tico
  Matiz
  Largus
  Nexia_1
  Nexia_2
  Nexia_3
  Lacetti
  Captiva
  Epica
  Tacuma
  Spark
  Cobalt
  Orlondo
  Gentra
  Boshqa
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  phone     String   @unique
  email     String   @unique
  password  String
  role      Role     @default(passenger)
  car       Car?
  profile   Profile?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([id, phone, email])
}

model Profile {
  id            Int      @id @default(autoincrement())
  userId        Int      @unique
  userName      String
  userRole      Role
  userPhone     String   @unique
  userEmail     String   @unique
  userCarNumber String?  @unique
  userCarType   CarType?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  posts         Post[]
  user          User     @relation(fields: [userId, userPhone, userEmail], references: [id, phone, email], onUpdate: Cascade)

  @@unique([userId, userPhone, userEmail])
}

model Car {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    Int      @unique
  carNumber String   @unique
  carType   CarType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id           Int      @id @default(autoincrement())
  profileId    Int
  profile      Profile  @relation(fields: [profileId], references: [id], onDelete: NoAction)
  fromLocation String
  toLocation   String
  goTime       String
  count        Int      @default(1)
  addition     String?
  status       Int      @default(1)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([goTime, profileId, toLocation, fromLocation, addition])
}
